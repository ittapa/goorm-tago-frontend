name: Deploy React App via Docker

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Parse Connection Secrets
      - name: Parse Connection Secrets
        run: |
          echo "SECRETS=${{ secrets.OCI_CENTOS8_GOORMTAGO }}" > $GITHUB_ENV
          echo "HOST=$(echo '${{ secrets.OCI_CENTOS8_GOORMTAGO }}' | jq -r '.host')" >> $GITHUB_ENV
          echo "PORT=$(echo '${{ secrets.OCI_CENTOS8_GOORMTAGO }}' | jq -r '.port')" >> $GITHUB_ENV
          echo "USERNAME=$(echo '${{ secrets.OCI_CENTOS8_GOORMTAGO }}' | jq -r '.username')" >> $GITHUB_ENV
          echo "PASSWORD=$(echo '${{ secrets.OCI_CENTOS8_GOORMTAGO }}' | jq -r '.password')" >> $GITHUB_ENV

      # Step 3: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 4: Deploy to CentOS 8 Server
      - name: Deploy to CentOS 8 Server
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ env.HOST }}
          port: ${{ env.PORT }}
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}
          script: |
            # Move to the project directory
            cd /home/goormtago/goorm-tago-frontend

            # Pull the latest code from the repository
            git reset --hard
            git pull origin main

            # Stop and remove the existing container
            sudo docker stop react-app || true
            sudo docker rm react-app || true

            # Remove the old Docker image (if exists)
            sudo docker rmi react-app:latest || true

            # Build and run the Docker container
            sudo docker build -t react-app:latest -f Dockerfile_A .
            sudo docker run -d -p 3000:3000 --name react-app react-app:latest
